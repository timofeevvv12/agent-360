{
    "swagger": "2.0",
    "info": {
        "title": "agent360",
        "version": "1.0.0",
        "contact": {
            "email": "agent360-no-reply@bubbleapps.io",
            "url": "https://my.agent360.pro"
        }
    },
    "host": "my.agent360.pro",
    "basePath": "/api/1.1",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "paths": {
        "/wf/object_to_company": {
            "post": {
                "description": "Triggers the workflow object_to_company",
                "parameters": [
                    {
                        "name": "object_to_company request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/object_to_companyBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/scene_to_object": {
            "post": {
                "description": "Triggers the workflow scene_to_object",
                "parameters": [
                    {
                        "name": "scene_to_object request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/scene_to_objectBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "response": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/auth": {
            "get": {
                "description": "Triggers the workflow auth",
                "parameters": [],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/login": {
            "post": {
                "description": "Triggers the workflow login",
                "parameters": [
                    {
                        "name": "login request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/loginBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wf/register": {
            "post": {
                "description": "Triggers the workflow register",
                "parameters": [
                    {
                        "name": "register request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/registerBody"
                        }
                    }
                ],
                "tags": [
                    "Workflow"
                ],
                "responses": {
                    "200": {
                        "description": "Workflow response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Workflow failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Outcome of the workflow"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the workflow"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/company/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type company by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the company to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved company",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/company"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type company by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the company to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "company request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/companyBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified company"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type company by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the company to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "company request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/companyBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced company"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type company by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the company to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced company"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/company": {
            "get": {
                "description": "Retrieve a list of things of type company with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of companies",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/company"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type company",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "company request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/companyBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type company",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/gallery/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type gallery by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the gallery to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved gallery",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/gallery"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type gallery by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the gallery to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "gallery request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/galleryBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified gallery"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type gallery by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the gallery to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "gallery request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/galleryBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced gallery"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type gallery by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the gallery to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced gallery"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/gallery": {
            "get": {
                "description": "Retrieve a list of things of type gallery with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of galleries",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/gallery"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type gallery",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "gallery request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/galleryBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type gallery",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/object/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type object by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the object to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved object",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type object by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the object to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "object request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/objectBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified object"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type object by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the object to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "object request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/objectBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced object"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type object by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the object to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced object"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/object": {
            "get": {
                "description": "Retrieve a list of things of type object with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of objects",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/object"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type object",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "object request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/objectBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type object",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/marker/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type marker by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the marker to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved marker",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/marker"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type marker by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the marker to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "marker request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/markerBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified marker"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type marker by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the marker to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "marker request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/markerBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced marker"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type marker by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the marker to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced marker"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/marker": {
            "get": {
                "description": "Retrieve a list of things of type marker with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of markers",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/marker"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type marker",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "marker request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/markerBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type marker",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/scene/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type scene by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the scene to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved scene",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/scene"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type scene by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the scene to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "scene request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/sceneBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified scene"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type scene by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the scene to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "scene request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/sceneBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced scene"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type scene by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the scene to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced scene"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/scene": {
            "get": {
                "description": "Retrieve a list of things of type scene with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of scenes",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/scene"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type scene",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "scene request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/sceneBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type scene",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/viewscounter/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type viewscounter by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the viewscounter to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved viewscounter",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/viewscounter"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type viewscounter by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the viewscounter to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "viewscounter request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/viewscounterBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified viewscounter"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type viewscounter by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the viewscounter to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "viewscounter request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/viewscounterBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced viewscounter"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type viewscounter by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the viewscounter to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced viewscounter"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/viewscounter": {
            "get": {
                "description": "Retrieve a list of things of type viewscounter with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of viewscounters",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/viewscounter"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type viewscounter",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "viewscounter request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/viewscounterBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type viewscounter",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/user/{UniqueID}": {
            "get": {
                "description": "Retrieve a thing of type user by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the user to retrieve",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved user",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "$ref": "#/definitions/user"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Modifies a thing of type user by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the user to modify",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "user request body",
                        "in": "body",
                        "description": "Body of the PATCH request",
                        "schema": {
                            "$ref": "#/definitions/userBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Modified user"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces a thing of type user by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the user to replace",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "user request body",
                        "in": "body",
                        "description": "Body of the PUT request",
                        "schema": {
                            "$ref": "#/definitions/userBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced user"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a thing of type user by unique ID",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "UniqueID",
                        "in": "path",
                        "description": "Unique ID of the user to delete",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Replaced user"
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/obj/user": {
            "get": {
                "description": "Retrieve a list of things of type user with some optional search constraints. Retrieves 100 items at most at once.",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items to fetch (maximum is 100)",
                        "type": "integer",
                        "format": "int32",
                        "default": 50
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Position to start from in the list",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Field to sort the list on",
                        "type": "string"
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "Sorting type: descending or ascending",
                        "type": "boolean"
                    },
                    {
                        "name": "constraints",
                        "in": "query",
                        "description": "Search constraints, stringified array as described [here](https://manual.bubble.io/core-resources/api/data-api#search-constraints)",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved list of users",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/user"
                                            }
                                        },
                                        "cursor": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Rank of the first item in the list"
                                        },
                                        "count": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of items in the current response. It is the minimum between the actual length of the list and the sent limit (or 100 if you did not specify a limit)."
                                        },
                                        "remaining": {
                                            "type": "number",
                                            "format": "float",
                                            "description": "Number of remaining items after the current response. Useful to fetch more items."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new thing of type user",
                "tags": [
                    "Data"
                ],
                "parameters": [
                    {
                        "name": "user request body",
                        "in": "body",
                        "description": "Body of the POST request",
                        "schema": {
                            "$ref": "#/definitions/userBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created one thing of type user",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Success status of the operation"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Unique id of the newly created object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Database retrieval failure",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Permission denied",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Wrong method",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal bug. Please file a bug report at bubble.io/support/report with the request that triggers this bug",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error message for the operation"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "company": {
            "type": "object",
            "properties": {
                "companyAddress": {
                    "type": "string",
                    "description": "'companyAddress' field of the current Company"
                },
                "companyRedactorList": {
                    "type": "array",
                    "description": "'companyRedactorList' field of the current Company",
                    "items": {
                        "type": "string",
                        "description": "user ('user' represented by a unique ID)"
                    }
                },
                "companyDomain": {
                    "type": "string",
                    "description": "'companyDomain' field of the current Company"
                },
                "companyVK": {
                    "type": "string",
                    "description": "'companyVK' field of the current Company"
                },
                "companyAvito": {
                    "type": "string",
                    "description": "'companyAvito' field of the current Company"
                },
                "companyLogo": {
                    "type": "string",
                    "description": "'companyLogo' field of the current Company"
                },
                "companyEmail": {
                    "type": "string",
                    "description": "'companyEmail' field of the current Company"
                },
                "companyName": {
                    "type": "string",
                    "description": "'companyName' field of the current Company"
                },
                "companyObjectList": {
                    "type": "array",
                    "description": "'companyObjectList' field of the current Company",
                    "items": {
                        "type": "string",
                        "description": "object ('object' represented by a unique ID)"
                    }
                },
                "companyOwner": {
                    "type": "string",
                    "description": "'companyOwner' field of the current Company ('user' represented by a unique ID)"
                },
                "companyTelephone": {
                    "type": "number",
                    "format": "float",
                    "description": "'companyTelephone' field of the current Company"
                },
                "companyTelegram": {
                    "type": "string",
                    "description": "'companyTelegram' field of the current Company"
                },
                "companyUniqueCounter": {
                    "type": "array",
                    "description": "'companyUniqueCounter' field of the current Company",
                    "items": {
                        "type": "string",
                        "description": "user ('user' represented by a unique ID)"
                    }
                },
                "companyViewerList": {
                    "type": "array",
                    "description": "'companyViewerList' field of the current Company",
                    "items": {
                        "type": "string",
                        "description": "user ('user' represented by a unique ID)"
                    }
                },
                "companyWebsite": {
                    "type": "string",
                    "description": "'companyWebsite' field of the current Company"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Company"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Company"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Company ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Company"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Company"
                }
            }
        },
        "gallery": {
            "type": "object",
            "properties": {
                "galleryImage": {
                    "type": "string",
                    "description": "'galleryImage' field of the current Gallery"
                },
                "galleryName": {
                    "type": "string",
                    "description": "'galleryName' field of the current Gallery"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Gallery"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Gallery"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Gallery ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Gallery"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Gallery"
                }
            }
        },
        "object": {
            "type": "object",
            "properties": {
                "objectGallery": {
                    "type": "array",
                    "description": "'objectGallery' field of the current Object",
                    "items": {
                        "type": "string",
                        "description": "gallery ('gallery' represented by a unique ID)"
                    }
                },
                "objectSceneList": {
                    "type": "array",
                    "description": "'objectSceneList' field of the current Object",
                    "items": {
                        "type": "string",
                        "description": "scene ('scene' represented by a unique ID)"
                    }
                },
                "objectAddress": {
                    "type": "string",
                    "description": "'objectAddress' field of the current Object"
                },
                "objectCompany": {
                    "type": "string",
                    "description": "'objectCompany' field of the current Object ('company' represented by a unique ID)"
                },
                "objectCover": {
                    "type": "string",
                    "description": "'objectCover' field of the current Object"
                },
                "objectCreator": {
                    "type": "string",
                    "description": "'objectCreator' field of the current Object"
                },
                "objectCreatorId": {
                    "type": "string",
                    "description": "'objectCreatorId' field of the current Object"
                },
                "objectDocumentList": {
                    "type": "array",
                    "description": "'objectDocumentList' field of the current Object",
                    "items": {
                        "type": "string",
                        "description": "document ('document' represented by a unique ID)"
                    }
                },
                "objectInfo": {
                    "type": "string",
                    "description": "'objectInfo' field of the current Object"
                },
                "objectName": {
                    "type": "string",
                    "description": "'objectName' field of the current Object"
                },
                "objectPictureList": {
                    "type": "array",
                    "description": "'objectPictureList' field of the current Object",
                    "items": {
                        "type": "string",
                        "description": "picture ('picture' represented by a unique ID)"
                    }
                },
                "objectState": {
                    "type": "option set",
                    "description": "'objectState' field of the current Object"
                },
                "objectTypeofLayout": {
                    "type": "option set",
                    "description": "'objectTypeofLayout' field of the current Object"
                },
                "objectUniqueCounter": {
                    "type": "array",
                    "description": "'objectUniqueCounter' field of the current Object",
                    "items": {
                        "type": "string",
                        "description": "user ('user' represented by a unique ID)"
                    }
                },
                "objectVideoList": {
                    "type": "array",
                    "description": "'objectVideoList' field of the current Object",
                    "items": {
                        "type": "string",
                        "description": "video ('video' represented by a unique ID)"
                    }
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Object"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Object"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Object ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Object"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Object"
                }
            }
        },
        "marker": {
            "type": "object",
            "properties": {
                "markerID": {
                    "type": "string",
                    "description": "'markerID' field of the current Marker"
                },
                "markerImg": {
                    "type": "string",
                    "description": "'markerImg' field of the current Marker"
                },
                "markerLatitude": {
                    "type": "number",
                    "format": "float",
                    "description": "'markerLatitude' field of the current Marker"
                },
                "markerLocation": {
                    "type": "string",
                    "description": "'markerLocation' field of the current Marker"
                },
                "markerLongitude": {
                    "type": "number",
                    "format": "float",
                    "description": "'markerLongitude' field of the current Marker"
                },
                "markerTitleTooltip": {
                    "type": "string",
                    "description": "'markerTitleTooltip' field of the current Marker"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Marker"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Marker"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Marker ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Marker"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Marker"
                }
            }
        },
        "scene": {
            "type": "object",
            "properties": {
                "sceneImage": {
                    "type": "string",
                    "description": "'sceneImage' field of the current Scene"
                },
                "sceneMarkers": {
                    "type": "array",
                    "description": "'sceneMarkers' field of the current Scene",
                    "items": {
                        "type": "string",
                        "description": "marker ('marker' represented by a unique ID)"
                    }
                },
                "sceneName": {
                    "type": "string",
                    "description": "'sceneName' field of the current Scene"
                },
                "sceneHideKey": {
                    "type": "string",
                    "description": "'sceneHideKey' field of the current Scene"
                },
                "sceneObject": {
                    "type": "string",
                    "description": "'sceneObject' field of the current Scene ('object' represented by a unique ID)"
                },
                "sceneOrder": {
                    "type": "number",
                    "format": "float",
                    "description": "'sceneOrder' field of the current Scene"
                },
                "scenePlace": {
                    "type": "string",
                    "description": "'scenePlace' field of the current Scene"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Scene"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Scene"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Scene ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Scene"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Scene"
                }
            }
        },
        "viewscounter": {
            "type": "object",
            "properties": {
                "viewscounterDate": {
                    "type": "string",
                    "description": "'viewscounterDate' field of the current Views counter"
                },
                "viewscounterObject": {
                    "type": "string",
                    "description": "'viewscounterObject' field of the current Views counter ('object' represented by a unique ID)"
                },
                "viewscounterCompany": {
                    "type": "string",
                    "description": "'viewscounterCompany' field of the current Views counter ('company' represented by a unique ID)"
                },
                "viewscounterUser": {
                    "type": "string",
                    "description": "'viewscounterUser' field of the current Views counter ('user' represented by a unique ID)"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current Views counter"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current Views counter"
                },
                "Created By": {
                    "type": "string",
                    "description": "'Created By' field of the current Views counter ('user' represented by a unique ID)"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current Views counter"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current Views counter"
                }
            }
        },
        "user": {
            "type": "object",
            "properties": {
                "userDisplayPreference": {
                    "type": "option set",
                    "description": "'userDisplayPreference' field of the current User"
                },
                "userCurentCompany": {
                    "type": "string",
                    "description": "'userCurentCompany' field of the current User ('company' represented by a unique ID)"
                },
                "userName": {
                    "type": "string",
                    "description": "'userName' field of the current User"
                },
                "userPhoto": {
                    "type": "string",
                    "description": "'userPhoto' field of the current User"
                },
                "userRoleInCompany": {
                    "type": "option set",
                    "description": "'userRoleInCompany' field of the current User"
                },
                "userSurname": {
                    "type": "string",
                    "description": "'userSurname' field of the current User"
                },
                "userTelephone": {
                    "type": "number",
                    "format": "float",
                    "description": "'userTelephone' field of the current User"
                },
                "userRole": {
                    "type": "option set",
                    "description": "'userRole' field of the current User"
                },
                "userCompanyList": {
                    "type": "array",
                    "description": "'userCompanyList' field of the current User",
                    "items": {
                        "type": "string",
                        "description": "company ('company' represented by a unique ID)"
                    }
                },
                "userLanguage": {
                    "type": "option set",
                    "description": "'userLanguage' field of the current User"
                },
                "userMainCompany": {
                    "type": "string",
                    "description": "'userMainCompany' field of the current User ('company' represented by a unique ID)"
                },
                "userWhatsapp": {
                    "type": "string",
                    "description": "'userWhatsapp' field of the current User"
                },
                "Created Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Created Date' field of the current User"
                },
                "Modified Date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "'Modified Date' field of the current User"
                },
                "_id": {
                    "type": "string",
                    "description": "'unique ID' field of the current User"
                },
                "Slug": {
                    "type": "string",
                    "description": "'Slug' field of the current User"
                },
                "authentication": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "description": "Email"
                                },
                                "email_confirmed": {
                                    "type": "boolean",
                                    "description": "Email confirmed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "object_to_companyBody": {
            "type": "object",
            "properties": {},
            "required": [
                "_wf_request_data"
            ]
        },
        "scene_to_objectBody": {
            "type": "object",
            "properties": {},
            "required": [
                "_wf_request_data"
            ]
        },
        "loginBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "required": [
                "email",
                "password"
            ]
        },
        "registerBody": {
            "type": "object",
            "properties": {},
            "required": [
                "_wf_request_data"
            ]
        },
        "companyBody": {
            "type": "object",
            "properties": {
                "companyAddress": {
                    "type": "string",
                    "description": "'companyAddress' field of the current Company"
                },
                "companyRedactorList": {
                    "type": "array",
                    "description": "'companyRedactorList' field of the current Company",
                    "items": {
                        "type": "string",
                        "description": "user ('user' represented by a unique ID)"
                    }
                },
                "companyDomain": {
                    "type": "string",
                    "description": "'companyDomain' field of the current Company"
                },
                "companyVK": {
                    "type": "string",
                    "description": "'companyVK' field of the current Company"
                },
                "companyAvito": {
                    "type": "string",
                    "description": "'companyAvito' field of the current Company"
                },
                "companyLogo": {
                    "type": "string",
                    "description": "'companyLogo' field of the current Company"
                },
                "companyEmail": {
                    "type": "string",
                    "description": "'companyEmail' field of the current Company"
                },
                "companyName": {
                    "type": "string",
                    "description": "'companyName' field of the current Company"
                },
                "companyObjectList": {
                    "type": "array",
                    "description": "'companyObjectList' field of the current Company",
                    "items": {
                        "type": "string",
                        "description": "object ('object' represented by a unique ID)"
                    }
                },
                "companyOwner": {
                    "type": "string",
                    "description": "'companyOwner' field of the current Company ('user' represented by a unique ID)"
                },
                "companyTelephone": {
                    "type": "number",
                    "format": "float",
                    "description": "'companyTelephone' field of the current Company"
                },
                "companyTelegram": {
                    "type": "string",
                    "description": "'companyTelegram' field of the current Company"
                },
                "companyUniqueCounter": {
                    "type": "array",
                    "description": "'companyUniqueCounter' field of the current Company",
                    "items": {
                        "type": "string",
                        "description": "user ('user' represented by a unique ID)"
                    }
                },
                "companyViewerList": {
                    "type": "array",
                    "description": "'companyViewerList' field of the current Company",
                    "items": {
                        "type": "string",
                        "description": "user ('user' represented by a unique ID)"
                    }
                },
                "companyWebsite": {
                    "type": "string",
                    "description": "'companyWebsite' field of the current Company"
                }
            }
        },
        "galleryBody": {
            "type": "object",
            "properties": {
                "galleryImage": {
                    "type": "string",
                    "description": "'galleryImage' field of the current Gallery"
                },
                "galleryName": {
                    "type": "string",
                    "description": "'galleryName' field of the current Gallery"
                }
            }
        },
        "objectBody": {
            "type": "object",
            "properties": {
                "objectGallery": {
                    "type": "array",
                    "description": "'objectGallery' field of the current Object",
                    "items": {
                        "type": "string",
                        "description": "gallery ('gallery' represented by a unique ID)"
                    }
                },
                "objectSceneList": {
                    "type": "array",
                    "description": "'objectSceneList' field of the current Object",
                    "items": {
                        "type": "string",
                        "description": "scene ('scene' represented by a unique ID)"
                    }
                },
                "objectAddress": {
                    "type": "string",
                    "description": "'objectAddress' field of the current Object"
                },
                "objectCompany": {
                    "type": "string",
                    "description": "'objectCompany' field of the current Object ('company' represented by a unique ID)"
                },
                "objectCover": {
                    "type": "string",
                    "description": "'objectCover' field of the current Object"
                },
                "objectCreator": {
                    "type": "string",
                    "description": "'objectCreator' field of the current Object"
                },
                "objectCreatorId": {
                    "type": "string",
                    "description": "'objectCreatorId' field of the current Object"
                },
                "objectDocumentList": {
                    "type": "array",
                    "description": "'objectDocumentList' field of the current Object",
                    "items": {
                        "type": "string",
                        "description": "document ('document' represented by a unique ID)"
                    }
                },
                "objectInfo": {
                    "type": "string",
                    "description": "'objectInfo' field of the current Object"
                },
                "objectName": {
                    "type": "string",
                    "description": "'objectName' field of the current Object"
                },
                "objectPictureList": {
                    "type": "array",
                    "description": "'objectPictureList' field of the current Object",
                    "items": {
                        "type": "string",
                        "description": "picture ('picture' represented by a unique ID)"
                    }
                },
                "objectState": {
                    "type": "option set",
                    "description": "'objectState' field of the current Object"
                },
                "objectTypeofLayout": {
                    "type": "option set",
                    "description": "'objectTypeofLayout' field of the current Object"
                },
                "objectUniqueCounter": {
                    "type": "array",
                    "description": "'objectUniqueCounter' field of the current Object",
                    "items": {
                        "type": "string",
                        "description": "user ('user' represented by a unique ID)"
                    }
                },
                "objectVideoList": {
                    "type": "array",
                    "description": "'objectVideoList' field of the current Object",
                    "items": {
                        "type": "string",
                        "description": "video ('video' represented by a unique ID)"
                    }
                }
            }
        },
        "markerBody": {
            "type": "object",
            "properties": {
                "markerID": {
                    "type": "string",
                    "description": "'markerID' field of the current Marker"
                },
                "markerImg": {
                    "type": "string",
                    "description": "'markerImg' field of the current Marker"
                },
                "markerLatitude": {
                    "type": "number",
                    "format": "float",
                    "description": "'markerLatitude' field of the current Marker"
                },
                "markerLocation": {
                    "type": "string",
                    "description": "'markerLocation' field of the current Marker"
                },
                "markerLongitude": {
                    "type": "number",
                    "format": "float",
                    "description": "'markerLongitude' field of the current Marker"
                },
                "markerTitleTooltip": {
                    "type": "string",
                    "description": "'markerTitleTooltip' field of the current Marker"
                }
            }
        },
        "sceneBody": {
            "type": "object",
            "properties": {
                "sceneImage": {
                    "type": "string",
                    "description": "'sceneImage' field of the current Scene"
                },
                "sceneMarkers": {
                    "type": "array",
                    "description": "'sceneMarkers' field of the current Scene",
                    "items": {
                        "type": "string",
                        "description": "marker ('marker' represented by a unique ID)"
                    }
                },
                "sceneName": {
                    "type": "string",
                    "description": "'sceneName' field of the current Scene"
                },
                "sceneHideKey": {
                    "type": "string",
                    "description": "'sceneHideKey' field of the current Scene"
                },
                "sceneObject": {
                    "type": "string",
                    "description": "'sceneObject' field of the current Scene ('object' represented by a unique ID)"
                },
                "sceneOrder": {
                    "type": "number",
                    "format": "float",
                    "description": "'sceneOrder' field of the current Scene"
                },
                "scenePlace": {
                    "type": "string",
                    "description": "'scenePlace' field of the current Scene"
                }
            }
        },
        "viewscounterBody": {
            "type": "object",
            "properties": {
                "viewscounterDate": {
                    "type": "string",
                    "description": "'viewscounterDate' field of the current Views counter"
                },
                "viewscounterObject": {
                    "type": "string",
                    "description": "'viewscounterObject' field of the current Views counter ('object' represented by a unique ID)"
                },
                "viewscounterCompany": {
                    "type": "string",
                    "description": "'viewscounterCompany' field of the current Views counter ('company' represented by a unique ID)"
                },
                "viewscounterUser": {
                    "type": "string",
                    "description": "'viewscounterUser' field of the current Views counter ('user' represented by a unique ID)"
                }
            }
        },
        "userBody": {
            "type": "object",
            "properties": {
                "userDisplayPreference": {
                    "type": "option set",
                    "description": "'userDisplayPreference' field of the current User"
                },
                "userCurentCompany": {
                    "type": "string",
                    "description": "'userCurentCompany' field of the current User ('company' represented by a unique ID)"
                },
                "userName": {
                    "type": "string",
                    "description": "'userName' field of the current User"
                },
                "userPhoto": {
                    "type": "string",
                    "description": "'userPhoto' field of the current User"
                },
                "userRoleInCompany": {
                    "type": "option set",
                    "description": "'userRoleInCompany' field of the current User"
                },
                "userSurname": {
                    "type": "string",
                    "description": "'userSurname' field of the current User"
                },
                "userTelephone": {
                    "type": "number",
                    "format": "float",
                    "description": "'userTelephone' field of the current User"
                },
                "userRole": {
                    "type": "option set",
                    "description": "'userRole' field of the current User"
                },
                "userCompanyList": {
                    "type": "array",
                    "description": "'userCompanyList' field of the current User",
                    "items": {
                        "type": "string",
                        "description": "company ('company' represented by a unique ID)"
                    }
                },
                "userLanguage": {
                    "type": "option set",
                    "description": "'userLanguage' field of the current User"
                },
                "userMainCompany": {
                    "type": "string",
                    "description": "'userMainCompany' field of the current User ('company' represented by a unique ID)"
                },
                "userWhatsapp": {
                    "type": "string",
                    "description": "'userWhatsapp' field of the current User"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Workflow",
            "description": "Use this to trigger a workflow"
        },
        {
            "name": "Data",
            "description": "Use this to fetch, modify and delete data"
        }
    ],
    "securityDefinitions": {
        "api_token": {
            "type": "apiKey",
            "name": "api_token",
            "in": "query"
        }
    },
    "security": [
        {
            "api_token": []
        }
    ]
}